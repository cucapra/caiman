#version 0.1.0

tmln time(e: Event) -> Event { returns e }
sptl space(bs: BufferSpace) -> BufferSpace { returns bs }

val main() -> i64 {
    x :- 3
    y :- 2
    n1 :- x + y
    n2 :- x + n1
    n3 :- n1 + n2

    returns n3
}

fn main_impl() -> i64 @ node(main.n3)-usable
    impls main, time, space
{
    let a: i64 @ node(main.x) = 3;
    let b: i64 @ node(main.y) = 2;
    let c: i64 @ node(main.n1) = a + b;
    let d: i64 @ node(main.n2) = a + c;
    let e: i64 @ node(main.n3) = c + d;
    e
}

pipeline main { main_impl }