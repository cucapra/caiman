version 0.0.2

type i64;
event %event0;
buffer_space %buffspace;
native_value %ni64 : i64;

function @main() -> i64;

value[impl default @main] %foo() -> i64 {
    %x = constant %ni64 4;
    return %x;
}

timeline %time(%e : %event0) -> %event0 {
    return %e;
}

spatial %space(%bs : %buffspace) -> %buffspace {
    return %bs;
}

schedule[value $val = %foo, timeline $time = %time, spatial $space = %space]
%bar<$time-usable, $time-usable>() ->
[%out : %ni64] {
    %x_ref = alloc-temporary local [] i64;
    local-do-builtin $val.%x() -> %x_ref;
    %result = read-ref i64 %x_ref;
    return %result;
}

pipeline "main" = %bar;