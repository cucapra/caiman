(
	version : (0, 0, 1),
	program : (
		types : {0:I32},
		funclets : {
			0 : (
				kind : MixedImplicit,
				input_types : [0],
				execution_scope : Some(Cpu),
				output_types : [0],
				nodes : [
					Phi(index : 0),
					ConstantInteger(value: 1, type_id : 0),
					CallExternalCpu(external_function_id : 0, arguments : [0]),
					ExtractResult(node_id : 2, index : 0),
					CallExternalGpuCompute(external_function_id : 0, arguments : [3], dimensions : [1, 1, 1]),
					ExtractResult(node_id : 4, index : 0)
				],
				tail_edge : Return(return_values : [5])
			),
			1 : (
				kind : MixedImplicit,
				input_types : [0],
				execution_scope : Some(Cpu),
				output_types : [0],
				nodes : [
					Phi(index : 0),
					ConstantInteger(value: 1, type_id : 0),
					CallExternalGpuCompute(external_function_id : 0, arguments : [0], dimensions : [1, 1, 1]),
					ExtractResult(node_id : 2, index : 0),
					CallExternalGpuCompute(external_function_id : 0, arguments : [3], dimensions : [1, 1, 1]),
					ExtractResult(node_id : 4, index : 0)
				],
				tail_edge : Return(return_values : [5])
			),
			2 : (
				kind : MixedImplicit,
				input_types : [0],
				execution_scope : Some(Cpu),
				output_types : [0],
				nodes : [
					Phi(index : 0),
					CallExternalCpu(external_function_id : 0, arguments : [0]),
					ExtractResult(node_id : 1, index : 0),
				],
				tail_edge : Return(return_values : [2])
			),
			3 : (
				kind : MixedImplicit,
				input_types : [0],
				execution_scope : Some(Cpu),
				output_types : [0],
				nodes : [
					Phi(index : 0),
					ConstantInteger(value: 1, type_id : 0),
					CallExternalGpuCompute(external_function_id : 0, arguments : [0], dimensions : [1, 1, 1]),
					ExtractResult(node_id : 2, index : 0),
					CallExternalCpu(external_function_id : 0, arguments : [3]),
					ExtractResult(node_id : 4, index : 0)
				],
				tail_edge : Return(return_values : [5])
			),
			4 : (
				kind : MixedImplicit,
				input_types : [0],
				execution_scope : Some(Cpu),
				output_types : [0],
				nodes : [
					Phi(index : 0),
					ConstantInteger(value: 1, type_id : 0),
					CallExternalCpu(external_function_id : 0, arguments : [0]),
					ExtractResult(node_id : 2, index : 0),
					CallExternalCpu(external_function_id : 0, arguments : [3]),
					ExtractResult(node_id : 4, index : 0)
				],
				tail_edge : Return(return_values : [5])
			),
			5 : (
				kind : MixedImplicit,
				input_types : [0],
				execution_scope : Some(Cpu),
				output_types : [0],
				nodes : [
					Phi(index : 0),
					ConstantInteger(value: 1, type_id : 0),
					CallExternalGpuCompute(external_function_id : 0, arguments : [0], dimensions : [1, 1, 1]),
					ExtractResult(node_id : 2, index : 0),
				],
				tail_edge : Return(return_values : [3])
			),
			6 : (
				kind : MixedImplicit,
				input_types : [0],
				execution_scope : Some(Cpu),
				output_types : [0, 0],
				nodes : [
					Phi(index : 0),
					ConstantInteger(value: 1, type_id : 0),
					CallExternalGpuCompute(external_function_id : 0, arguments : [0], dimensions : [1, 1, 1]),
					ExtractResult(node_id : 2, index : 0),
				],
				tail_edge : Yield(funclet_ids : [7, 8], captured_arguments : [3], return_values : [3])
			),
			7 : (
				kind : MixedImplicit,
				input_types : [0, 0],
				execution_scope : Some(Cpu),
				output_types : [0, 0],
				nodes : [
					Phi(index : 0),
					ConstantInteger(value: 1, type_id : 0),
					CallExternalGpuCompute(external_function_id : 0, arguments : [0], dimensions : [1, 1, 1]),
					ExtractResult(node_id : 2, index : 0),
					Phi(index : 1),
				],
				tail_edge : Yield(funclet_ids : [7, 8], captured_arguments : [3], return_values : [4])
			),
			8 : (
				kind : MixedImplicit,
				input_types : [0],
				execution_scope : Some(Cpu),
				output_types : [0],
				nodes : [
					Phi(index : 0),
				],
				tail_edge : Return(return_values : [0])
			),
		},
		external_cpu_functions : [
			(name : "do_thing_on_cpu", input_types : [0], output_types : [0])
		],
		external_gpu_functions : [
			(
				name : "do_thing_on_gpu", input_types : [0], output_types : [0], entry_point : "main", resource_bindings : [(group : 0, binding : 0, input : Some(0), output : None), (group : 0, binding : 1, input : None, output : Some(0))],
				shader_module_content : Wgsl
				("
					struct Output {field_0 : i32;};
					fn do_thing_on_gpu(a : i32) -> Output 
					{
						var output : Output;
						output.field_0 = a + 1;
						return output;
					}
					
					struct Input_0 { field_0 : i32; };
					[[group(0), binding(0)]] var<storage, read> input_0 : Input_0;
					struct Output_0 { field_0 : i32; };
					[[group(0), binding(1)]] var<storage, read_write> output_0 : Output_0;
					[[stage(compute), workgroup_size(1, 1, 1)]] fn main()
					{
						let output = do_thing_on_gpu(input_0.field_0);
						output_0.field_0 = output.field_0;
					}
				")
			)
		],
		pipelines : [
			(name : "pipeline_1", entry_funclet : 0), 
			(name : "pipeline_with_gpu_gpu_communication", entry_funclet : 1),
			(name : "pipeline_with_single_cpu_call", entry_funclet : 2),
			(name : "pipeline_with_gpu_cpu_communication", entry_funclet : 3),
			(name : "pipeline_with_cpu_cpu_communication", entry_funclet : 4),
			(name : "pipeline_with_single_gpu_call", entry_funclet : 5),
			(name : "pipeline_with_yield_enter_loop_exit", entry_funclet : 6),
			]
	)
)