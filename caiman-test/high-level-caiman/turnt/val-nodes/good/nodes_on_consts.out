Program {
    path: "",
    version: Version {
        major: 0,
        minor: 0,
        detailed: 2,
    },
    declarations: [
        TypeDecl(
            Local(
                LocalType {
                    name: "BufferSpace",
                    data: BufferSpace,
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "Event",
                    data: Event,
                },
            ),
        ),
        TypeDecl(
            FFI(
                I64,
            ),
        ),
        TypeDecl(
            FFI(
                I32,
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "bool",
                    data: NativeValue {
                        storage_type: FFI(
                            I32,
                        ),
                    },
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "&bool",
                    data: Ref {
                        storage_type: FFI(
                            I32,
                        ),
                        storage_place: Local,
                        buffer_flags: BufferFlags {
                            map_read: false,
                            map_write: false,
                            copy_src: false,
                            copy_dst: false,
                            storage: false,
                            uniform: false,
                        },
                    },
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "i64",
                    data: NativeValue {
                        storage_type: FFI(
                            I64,
                        ),
                    },
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "&i64",
                    data: Ref {
                        storage_type: FFI(
                            I64,
                        ),
                        storage_place: Local,
                        buffer_flags: BufferFlags {
                            map_read: false,
                            map_write: false,
                            copy_src: false,
                            copy_dst: false,
                            storage: false,
                            uniform: false,
                        },
                    },
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "i32",
                    data: NativeValue {
                        storage_type: FFI(
                            I32,
                        ),
                    },
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "&i32",
                    data: Ref {
                        storage_type: FFI(
                            I32,
                        ),
                        storage_place: Local,
                        buffer_flags: BufferFlags {
                            map_read: false,
                            map_write: false,
                            copy_src: false,
                            copy_dst: false,
                            storage: false,
                            uniform: false,
                        },
                    },
                },
            ),
        ),
        Funclet(
            Funclet {
                kind: Timeline,
                header: FuncletHeader {
                    name: FuncletId(
                        "time",
                    ),
                    args: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "e",
                                ),
                            ),
                            typ: Local(
                                "Event",
                            ),
                            tags: [],
                        },
                    ],
                    ret: [
                        FuncletArgument {
                            name: None,
                            typ: Local(
                                "Event",
                            ),
                            tags: [],
                        },
                    ],
                    binding: None,
                },
                commands: [
                    Some(
                        TailEdge(
                            Return {
                                return_values: Some(
                                    [
                                        Some(
                                            NodeId(
                                                "e",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: Spatial,
                header: FuncletHeader {
                    name: FuncletId(
                        "space",
                    ),
                    args: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "bs",
                                ),
                            ),
                            typ: Local(
                                "BufferSpace",
                            ),
                            tags: [],
                        },
                    ],
                    ret: [
                        FuncletArgument {
                            name: None,
                            typ: Local(
                                "BufferSpace",
                            ),
                            tags: [],
                        },
                    ],
                    binding: None,
                },
                commands: [
                    Some(
                        TailEdge(
                            Return {
                                return_values: Some(
                                    [
                                        Some(
                                            NodeId(
                                                "bs",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: Value,
                header: FuncletHeader {
                    name: FuncletId(
                        "main",
                    ),
                    args: [],
                    ret: [
                        FuncletArgument {
                            name: None,
                            typ: Local(
                                "i64",
                            ),
                            tags: [],
                        },
                    ],
                    binding: ValueBinding(
                        FunctionClassBinding {
                            default: false,
                            function_class: FunctionClassId(
                                "main",
                            ),
                        },
                    ),
                },
                commands: [
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "b",
                                    ),
                                ),
                                node: Constant {
                                    value: Some(
                                        "0",
                                    ),
                                    type_id: Some(
                                        Local(
                                            "bool",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "one",
                                    ),
                                ),
                                node: Constant {
                                    value: Some(
                                        "1",
                                    ),
                                    type_id: Some(
                                        Local(
                                            "i64",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "two",
                                    ),
                                ),
                                node: Constant {
                                    value: Some(
                                        "2",
                                    ),
                                    type_id: Some(
                                        Local(
                                            "i64",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "r",
                                    ),
                                ),
                                node: Select {
                                    condition: Some(
                                        NodeId(
                                            "b",
                                        ),
                                    ),
                                    true_case: Some(
                                        NodeId(
                                            "one",
                                        ),
                                    ),
                                    false_case: Some(
                                        NodeId(
                                            "two",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        TailEdge(
                            Return {
                                return_values: Some(
                                    [
                                        Some(
                                            NodeId(
                                                "r",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        FunctionClass(
            FunctionClass {
                name: FunctionClassId(
                    "main",
                ),
                input_types: [],
                output_types: [
                    Local(
                        "i64",
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: ScheduleExplicit,
                header: FuncletHeader {
                    name: FuncletId(
                        "_foo0",
                    ),
                    args: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_out0",
                                ),
                            ),
                            typ: Local(
                                "i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Node(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "main",
                                                    ),
                                                ),
                                                node: Some(
                                                    NodeId(
                                                        "r",
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "space",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "time",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    ret: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_out0",
                                ),
                            ),
                            typ: Local(
                                "i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Node(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "main",
                                                    ),
                                                ),
                                                node: Some(
                                                    NodeId(
                                                        "r",
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "space",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "time",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    binding: ScheduleBinding(
                        ScheduleBinding {
                            implicit_tags: None,
                            value: Some(
                                FuncletId(
                                    "main",
                                ),
                            ),
                            timeline: Some(
                                FuncletId(
                                    "time",
                                ),
                            ),
                            spatial: Some(
                                FuncletId(
                                    "space",
                                ),
                            ),
                        },
                    ),
                },
                commands: [
                    Some(
                        TailEdge(
                            Return {
                                return_values: Some(
                                    [
                                        Some(
                                            NodeId(
                                                "_out0",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: ScheduleExplicit,
                header: FuncletHeader {
                    name: FuncletId(
                        "foo",
                    ),
                    args: [],
                    ret: [
                        FuncletArgument {
                            name: None,
                            typ: Local(
                                "i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Node(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "main",
                                                    ),
                                                ),
                                                node: Some(
                                                    NodeId(
                                                        "r",
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "space",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "time",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    binding: ScheduleBinding(
                        ScheduleBinding {
                            implicit_tags: None,
                            value: Some(
                                FuncletId(
                                    "main",
                                ),
                            ),
                            timeline: Some(
                                FuncletId(
                                    "time",
                                ),
                            ),
                            spatial: Some(
                                FuncletId(
                                    "space",
                                ),
                            ),
                        },
                    ),
                },
                commands: [
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t0",
                                    ),
                                ),
                                node: AllocTemporary {
                                    place: Some(
                                        Local,
                                    ),
                                    storage_type: Some(
                                        FFI(
                                            I32,
                                        ),
                                    ),
                                    buffer_flags: Some(
                                        BufferFlags {
                                            map_read: false,
                                            map_write: false,
                                            copy_src: false,
                                            copy_dst: false,
                                            storage: false,
                                            uniform: false,
                                        },
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: None,
                                node: LocalDoBuiltin {
                                    operation: Some(
                                        Node(
                                            Some(
                                                RemoteNodeId {
                                                    funclet: Some(
                                                        FuncletId(
                                                            "main",
                                                        ),
                                                    ),
                                                    node: Some(
                                                        NodeId(
                                                            "b",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                    inputs: Some(
                                        [],
                                    ),
                                    outputs: Some(
                                        [
                                            Some(
                                                NodeId(
                                                    "_t0",
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "b_0",
                                    ),
                                ),
                                node: ReadRef {
                                    storage_type: Some(
                                        FFI(
                                            I32,
                                        ),
                                    ),
                                    source: Some(
                                        NodeId(
                                            "_t0",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_v_0_ref",
                                    ),
                                ),
                                node: AllocTemporary {
                                    place: Some(
                                        Local,
                                    ),
                                    storage_type: Some(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    buffer_flags: Some(
                                        BufferFlags {
                                            map_read: false,
                                            map_write: false,
                                            copy_src: false,
                                            copy_dst: false,
                                            storage: false,
                                            uniform: false,
                                        },
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t1",
                                    ),
                                ),
                                node: DefaultJoin,
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t2",
                                    ),
                                ),
                                node: InlineJoin {
                                    funclet: Some(
                                        FuncletId(
                                            "_foo2",
                                        ),
                                    ),
                                    captures: Some(
                                        [],
                                    ),
                                    continuation: Some(
                                        NodeId(
                                            "_t1",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        TailEdge(
                            ScheduleSelect {
                                value_operation: Some(
                                    Node(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "main",
                                                    ),
                                                ),
                                                node: Some(
                                                    NodeId(
                                                        "r",
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                ),
                                timeline_operation: Some(
                                    None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "time",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                ),
                                spatial_operation: Some(
                                    None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "space",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                ),
                                condition: Some(
                                    NodeId(
                                        "b_0",
                                    ),
                                ),
                                callee_funclet_ids: Some(
                                    [
                                        Some(
                                            FuncletId(
                                                "_foo3",
                                            ),
                                        ),
                                        Some(
                                            FuncletId(
                                                "_foo4",
                                            ),
                                        ),
                                    ],
                                ),
                                callee_arguments: Some(
                                    [
                                        Some(
                                            NodeId(
                                                "_v_0_ref",
                                            ),
                                        ),
                                    ],
                                ),
                                continuation_join: Some(
                                    NodeId(
                                        "_t2",
                                    ),
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: ScheduleExplicit,
                header: FuncletHeader {
                    name: FuncletId(
                        "_foo2",
                    ),
                    args: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_v_0_ref",
                                ),
                            ),
                            typ: Local(
                                "&i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Node(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "main",
                                                    ),
                                                ),
                                                node: Some(
                                                    NodeId(
                                                        "r",
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "space",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Save,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "time",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    ret: [
                        FuncletArgument {
                            name: None,
                            typ: Local(
                                "i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Node(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "main",
                                                    ),
                                                ),
                                                node: Some(
                                                    NodeId(
                                                        "r",
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "space",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "time",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    binding: ScheduleBinding(
                        ScheduleBinding {
                            implicit_tags: None,
                            value: Some(
                                FuncletId(
                                    "main",
                                ),
                            ),
                            timeline: Some(
                                FuncletId(
                                    "time",
                                ),
                            ),
                            spatial: Some(
                                FuncletId(
                                    "space",
                                ),
                            ),
                        },
                    ),
                },
                commands: [
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_0v_0",
                                    ),
                                ),
                                node: ReadRef {
                                    storage_type: Some(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    source: Some(
                                        NodeId(
                                            "_v_0_ref",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t0",
                                    ),
                                ),
                                node: DefaultJoin,
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t1",
                                    ),
                                ),
                                node: InlineJoin {
                                    funclet: Some(
                                        FuncletId(
                                            "_foo0",
                                        ),
                                    ),
                                    captures: Some(
                                        [],
                                    ),
                                    continuation: Some(
                                        NodeId(
                                            "_t0",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        TailEdge(
                            Jump {
                                join: Some(
                                    NodeId(
                                        "_t1",
                                    ),
                                ),
                                arguments: Some(
                                    [
                                        Some(
                                            NodeId(
                                                "_0v_0",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: ScheduleExplicit,
                header: FuncletHeader {
                    name: FuncletId(
                        "_foo3",
                    ),
                    args: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_v_0_ref",
                                ),
                            ),
                            typ: Local(
                                "&i64",
                            ),
                            tags: [
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "main",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Dead,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "space",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Save,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "time",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    ret: [
                        FuncletArgument {
                            name: None,
                            typ: Local(
                                "&i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Node(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "main",
                                                    ),
                                                ),
                                                node: Some(
                                                    NodeId(
                                                        "one",
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "space",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Save,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "time",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    binding: ScheduleBinding(
                        ScheduleBinding {
                            implicit_tags: None,
                            value: Some(
                                FuncletId(
                                    "main",
                                ),
                            ),
                            timeline: Some(
                                FuncletId(
                                    "time",
                                ),
                            ),
                            spatial: Some(
                                FuncletId(
                                    "space",
                                ),
                            ),
                        },
                    ),
                },
                commands: [
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t0",
                                    ),
                                ),
                                node: AllocTemporary {
                                    place: Some(
                                        Local,
                                    ),
                                    storage_type: Some(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    buffer_flags: Some(
                                        BufferFlags {
                                            map_read: false,
                                            map_write: false,
                                            copy_src: false,
                                            copy_dst: false,
                                            storage: false,
                                            uniform: false,
                                        },
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: None,
                                node: LocalDoBuiltin {
                                    operation: Some(
                                        Node(
                                            Some(
                                                RemoteNodeId {
                                                    funclet: Some(
                                                        FuncletId(
                                                            "main",
                                                        ),
                                                    ),
                                                    node: Some(
                                                        NodeId(
                                                            "one",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                    inputs: Some(
                                        [],
                                    ),
                                    outputs: Some(
                                        [
                                            Some(
                                                NodeId(
                                                    "_t0",
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "one_0",
                                    ),
                                ),
                                node: ReadRef {
                                    storage_type: Some(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    source: Some(
                                        NodeId(
                                            "_t0",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: None,
                                node: LocalDoBuiltin {
                                    operation: Some(
                                        Node(
                                            Some(
                                                RemoteNodeId {
                                                    funclet: Some(
                                                        FuncletId(
                                                            "main",
                                                        ),
                                                    ),
                                                    node: Some(
                                                        NodeId(
                                                            "one",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                    inputs: Some(
                                        [],
                                    ),
                                    outputs: Some(
                                        [
                                            Some(
                                                NodeId(
                                                    "_v_0_ref",
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        TailEdge(
                            Return {
                                return_values: Some(
                                    [
                                        Some(
                                            NodeId(
                                                "_v_0_ref",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: ScheduleExplicit,
                header: FuncletHeader {
                    name: FuncletId(
                        "_foo4",
                    ),
                    args: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_v_0_ref",
                                ),
                            ),
                            typ: Local(
                                "&i64",
                            ),
                            tags: [
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "main",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Dead,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "space",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Save,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "time",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    ret: [
                        FuncletArgument {
                            name: None,
                            typ: Local(
                                "&i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Node(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "main",
                                                    ),
                                                ),
                                                node: Some(
                                                    NodeId(
                                                        "two",
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "space",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Save,
                                },
                                Tag {
                                    quot: None(
                                        Some(
                                            RemoteNodeId {
                                                funclet: Some(
                                                    FuncletId(
                                                        "time",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    binding: ScheduleBinding(
                        ScheduleBinding {
                            implicit_tags: None,
                            value: Some(
                                FuncletId(
                                    "main",
                                ),
                            ),
                            timeline: Some(
                                FuncletId(
                                    "time",
                                ),
                            ),
                            spatial: Some(
                                FuncletId(
                                    "space",
                                ),
                            ),
                        },
                    ),
                },
                commands: [
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t0",
                                    ),
                                ),
                                node: AllocTemporary {
                                    place: Some(
                                        Local,
                                    ),
                                    storage_type: Some(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    buffer_flags: Some(
                                        BufferFlags {
                                            map_read: false,
                                            map_write: false,
                                            copy_src: false,
                                            copy_dst: false,
                                            storage: false,
                                            uniform: false,
                                        },
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: None,
                                node: LocalDoBuiltin {
                                    operation: Some(
                                        Node(
                                            Some(
                                                RemoteNodeId {
                                                    funclet: Some(
                                                        FuncletId(
                                                            "main",
                                                        ),
                                                    ),
                                                    node: Some(
                                                        NodeId(
                                                            "two",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                    inputs: Some(
                                        [],
                                    ),
                                    outputs: Some(
                                        [
                                            Some(
                                                NodeId(
                                                    "_t0",
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "two_0",
                                    ),
                                ),
                                node: ReadRef {
                                    storage_type: Some(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    source: Some(
                                        NodeId(
                                            "_t0",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        Node(
                            NamedNode {
                                name: None,
                                node: LocalDoBuiltin {
                                    operation: Some(
                                        Node(
                                            Some(
                                                RemoteNodeId {
                                                    funclet: Some(
                                                        FuncletId(
                                                            "main",
                                                        ),
                                                    ),
                                                    node: Some(
                                                        NodeId(
                                                            "two",
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    ),
                                    inputs: Some(
                                        [],
                                    ),
                                    outputs: Some(
                                        [
                                            Some(
                                                NodeId(
                                                    "_v_0_ref",
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            },
                        ),
                    ),
                    Some(
                        TailEdge(
                            Return {
                                return_values: Some(
                                    [
                                        Some(
                                            NodeId(
                                                "_v_0_ref",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Pipeline(
            Pipeline {
                name: "main",
                funclet: FuncletId(
                    "foo",
                ),
            },
        ),
    ],
}
