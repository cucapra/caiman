(
	version : (0, 0, 1),
	program : (
		explicate : false,
		native_interface : (
			types : {
				0 : I32,
			},
			external_functions : {
				2 : CpuPureOperation((name : "do_thing_on_cpu", input_types : [0], output_types : [0])),
				0 : GpuKernel((
					name : "do_thing_on_gpu", input_types : [0], output_types : [0], entry_point : "main", resource_bindings : [(group : 0, binding : 0, input : Some(0), output : None), (group : 0, binding : 1, input : None, output : Some(0))],
					dimensionality : 3,
					shader_module : Glsl
					("
						#version 450
						layout(set = 0, binding = 0) readonly buffer Input_0 {
							int field_0;
						} input_0;
						layout(set = 0, binding = 1) buffer Output_0 {
							int field_0;
						} output_0;
						layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
						void main() {
							output_0.field_0 = input_0.field_0 + 1;
						}
					")
				)),
				1 : GpuKernel((
					name : "do_thing_on_gpu_2", input_types : [0], output_types : [0], entry_point : "main", resource_bindings : [(group : 0, binding : 0, input : Some(0), output : Some(0))],
					dimensionality : 0,
					shader_module : Glsl
					("
						#version 450
						layout(set = 0, binding = 0) buffer InputOutput_0 {
							int field_0;
						} input_output_0;
						layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
						void main() {
							input_output_0.field_0 = input_output_0.field_0 + 1;
						}
					")
				)),
				3 :  CpuEffectfulOperation((
					name : "loop",
					input_types : [],
					output_types : [],
				))
			},
			effects : {
				0 : FullyConnected(effectful_function_ids : [3])
			}
		),
		function_classes : {
			1 : (name : "looping_value_function", input_types : [0], output_types : [0], default_funclet_id : Some(19)),
			4 : (input_types : [0], output_types : [0], external_function_ids : [0]),
			5 : (input_types : [0], output_types : [0], external_function_ids : [1])
		},
		types : {
			0 : NativeValue(storage_type : 0),
			1 : Slot(storage_type : 0, queue_stage : Ready, queue_place : Local ),
			2 : Event(place : Local),
			3 : Slot(storage_type : 0, queue_stage : Submitted, queue_place : Gpu ),
			4 : Fence( queue_place : Gpu ),
			5 : Slot(storage_type : 0, queue_stage : Ready, queue_place : Gpu ),
			6 : Buffer(storage_place : Gpu, static_layout_opt : Some((alignment_bits : 0, byte_size : 4096)) ),
			7 : BufferSpace,
		},
		funclets : {
			18 : (
				kind : Spatial,
				input_types : [7],
				output_types : [7],

				nodes : [
					Phi(index : 0),
				],
				tail_edge : Return(return_values : [0])
			),

			19 : (
				kind : Value,
				input_types : [0],
				output_types : [0],
				nodes : [
					Phi(index : 0),
					CallValueFunction(function_id : 5, dimensions : [], arguments : [0]),
					ExtractResult(node_id : 1, index : 0),
					CallValueFunction(function_id : 1, arguments : [2]),
					ExtractResult(node_id : 3, index : 0),
				],
				tail_edge : Return(return_values : [4])
			),

			20 : (
				kind : ScheduleExplicit,
				input_types : [3],
				output_types : [3],
				spec_binding : ScheduleExplicit(
					value : (
						funclet_id_opt : Some(19),
						input_tags : [Input(funclet_id : 19, index : 0)],
						output_tags : [Output(funclet_id : 19, index : 0)]
					),
					spatial : (
						funclet_id_opt : Some(18),
						input_tags : [Input(funclet_id : 18, index : 0)],
						output_tags : [Output(funclet_id : 18, index : 0)]
					),
					timeline : (
						funclet_id_opt : Some(22),
						input_tags : [Input(funclet_id : 22, index : 0)],
						output_tags : [None],
						implicit_in_tag : Input(funclet_id : 22, index : 0),
						implicit_out_tag : Output(funclet_id : 22, index : 0)
					)
				),
				nodes : [
					Phi(index : 0),
					UnboundSlot(place : Gpu, storage_type : 0, operation : (funclet_id : 19, node_id : 2)),
					EncodeDoExternal(place : Gpu, operation : (funclet_id : 19, node_id : 1), external_function_id : 1, inputs : [0], outputs : [1]),
					Submit(place : Gpu, event : (funclet_id : 22, node_id : 1)),
					DefaultJoin,
				],
				tail_edge : Yield(external_function_id : 3, yielded_nodes : [], next_funclet : 21, arguments : [1], continuation_join : 4 )
				//tail_edge : ScheduleCall(value_operation : (funclet_id : 19, node_id : 3), callee_funclet_id : 20, callee_arguments : [1], continuation_join : 3)
			),

			21 : (
				kind : ScheduleExplicit,
				input_types : [3],
				output_types : [3],
				spec_binding : ScheduleExplicit(
					value : (
						funclet_id_opt : Some(19),
						input_tags : [Node(node_id : 2)],
						output_tags : [Node(node_id : 4)]
					),
					spatial : (
						funclet_id_opt : Some(18),
						input_tags : [Node(node_id : 0)],
						output_tags : [Output(funclet_id : 18, index : 0)]
					),
					timeline : (
						funclet_id_opt : Some(22),
						input_tags : [Input(funclet_id : 22, index : 0)],
						output_tags : [None],
						implicit_in_tag : Input(funclet_id : 22, index : 0),
						implicit_out_tag : Output(funclet_id : 22, index : 0)
					)
				),
				nodes : [
					Phi(index : 0),
					DefaultJoin,
					//Join(funclet : 23, captures : [], continuation : 1),
				],
				tail_edge : ScheduleCall(value_operation : (funclet_id : 19, node_id : 3), callee_funclet_id : 20, callee_arguments : [0], continuation_join : 1)
			),


			22 : (
				kind : Timeline,
				input_types : [2],
				output_types : [2],

				nodes : [
					Phi(index : 0),
					SubmissionEvent(here_place : Local, there_place : Gpu, local_past : 0),
				],
				tail_edge : Return(return_values : [1])
			),

			/*23 : (
				kind : ScheduleExplicit,
				input_types : [3],
				output_types : [3],

				nodes : [
					Phi(index : 0),
					DefaultJoin,
					Join(funclet : 23, captures : [], continuation : 1),
				],
				tail_edge : ScheduleCall(value_operation : (funclet_id : 19, node_id : 3), callee_funclet_id : 20, callee_arguments : [0], continuation_join : 2)
			),*/

		},
		/*scheduling_funclet_extras : {
			20 : (
				value_funclet_id_opt : Some(19),
				spatial_funclet_id_opt : Some(18),
				temporal_funclet_id_opt : Some(22),
				input_tag_sets : [ (value_tag : Input(funclet_id : 19, index : 0), timeline_tag : Input(funclet_id : 22, index : 0), spatial_tag : Input(funclet_id : 18, index : 0))],
				output_tag_sets : [ (value_tag : Output(funclet_id : 19, index : 0), timeline_tag : None, spatial_tag : Output(funclet_id : 18, index : 0)) ],
				in_timeline_tag : Input(funclet_id : 22, index : 0),
				out_timeline_tag : Output(funclet_id : 22, index : 0),
			),
			21 : (
				value_funclet_id_opt : Some(19),
				spatial_funclet_id_opt : Some(18),
				temporal_funclet_id_opt : Some(22),
				input_tag_sets : [(value_tag : Node(node_id : 2), timeline_tag : Input(funclet_id : 22, index : 0), spatial_tag : Node(node_id : 0))],
				output_tag_sets : [(value_tag : Node(node_id : 4), timeline_tag : None, spatial_tag : Output(funclet_id : 18, index : 0))],
				in_timeline_tag : Input(funclet_id : 22, index : 0), //Operation(remote_node_id : (funclet_id : 22, node_id : 1))
				out_timeline_tag : Output(funclet_id : 22, index : 0),
			),
		},*/
		pipelines : [
			(
				name : "looping_pipeline",
				entry_funclet : 20,
				effect_id_opt : Some(0)
				/*yield_points : {
					(0) :  (
						name : "loop",
						yielded_types : [],
						resuming_types : [],
						yielded_timeline_tag : Output(funclet_id : 22, index : 0),
						resuming_timeline_tag : Input(funclet_id : 22, index : 0),
						spatial_funclet_id : 18
					)
				}*/
			),
		]
	)
)