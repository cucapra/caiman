#version 0.1.0

tmln time(e: Event) -> Event { returns e }
sptl space(s: BufferSpace) -> BufferSpace { returns s }

val main() -> i64 {
    returns r
    plus :- a + b

    c :- false
    a :- 5
    b :- 7
    
    minus :- a - b

    r :- plus if c else minus
}

fn main_impl() -> i64 @ node(main.r)-usable impls main, time, space  {
    let a: i64 @ node(main.a) = 5;
    let b: i64 @ node(main.b) = 7;
    let c: bool @ node(main.c) = false;

    if @ node(main.r) c {
        let sum: i64 @ node(main.plus) = a + b;
        return sum;
    } else {
        let diff: i64 @ node(main.minus) = a - b;
        return diff;
    }
}

pipeline main { main_impl }