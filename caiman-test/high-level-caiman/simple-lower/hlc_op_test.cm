#version 0.1.0

tmln time(e: Event) -> Event { returns e }
sptl space(bs: BufferSpace) -> BufferSpace { returns bs }

val main() -> i64 {
    a :- 2
    c :- 10
    b :- a * c
    d :- b + a
    e :- d - c
    t :- 3
    k :- e / t
    returns k
}

fn main_impl() -> i64 @ node(main.k)-usable
    impls main, time, space
{
    let a: i64 @ node(main.a) = 2;
    let c: i64 @ node(main.c) = 10;
    let b: i64 @ node(main.b) = a * c;
    let d: i64 @ node(main.d) = b + a;
    let e: i64 @ node(main.e) = d - c;
    let t: i64 @ node(main.t) = 3;
    let k: i64 @ node(main.k) = e / t;
    return k;
    
}

pipeline main { main_impl }