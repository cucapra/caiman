Program {
    path: "",
    version: Version {
        major: 0,
        minor: 0,
        detailed: 2,
    },
    declarations: [
        TypeDecl(
            Local(
                LocalType {
                    name: "BufferSpace",
                    data: BufferSpace,
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "Event",
                    data: Event,
                },
            ),
        ),
        TypeDecl(
            FFI(
                I64,
            ),
        ),
        TypeDecl(
            FFI(
                I32,
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "bool",
                    data: NativeValue {
                        storage_type: FFI(
                            I32,
                        ),
                    },
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "&bool",
                    data: Ref {
                        storage_type: FFI(
                            I32,
                        ),
                        storage_place: Local,
                        buffer_flags: BufferFlags {
                            map_read: true,
                            map_write: true,
                            copy_src: false,
                            copy_dst: false,
                            storage: false,
                            uniform: false,
                        },
                    },
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "i64",
                    data: NativeValue {
                        storage_type: FFI(
                            I64,
                        ),
                    },
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "&i64",
                    data: Ref {
                        storage_type: FFI(
                            I64,
                        ),
                        storage_place: Local,
                        buffer_flags: BufferFlags {
                            map_read: true,
                            map_write: true,
                            copy_src: false,
                            copy_dst: false,
                            storage: false,
                            uniform: false,
                        },
                    },
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "i32",
                    data: NativeValue {
                        storage_type: FFI(
                            I32,
                        ),
                    },
                },
            ),
        ),
        TypeDecl(
            Local(
                LocalType {
                    name: "&i32",
                    data: Ref {
                        storage_type: FFI(
                            I32,
                        ),
                        storage_place: Local,
                        buffer_flags: BufferFlags {
                            map_read: true,
                            map_write: true,
                            copy_src: false,
                            copy_dst: false,
                            storage: false,
                            uniform: false,
                        },
                    },
                },
            ),
        ),
        FunctionClass(
            FunctionClass {
                name: FunctionClassId(
                    "_lt_i64_i64",
                ),
                input_types: [
                    FFI(
                        I64,
                    ),
                    FFI(
                        I64,
                    ),
                ],
                output_types: [
                    FFI(
                        I32,
                    ),
                ],
            },
        ),
        ExternalFunction(
            ExternalFunction {
                kind: CPUPure,
                value_function_binding: FunctionClassBinding {
                    default: false,
                    function_class: FunctionClassId(
                        "_lt_i64_i64",
                    ),
                },
                name: "_lt_i64_i64",
                input_args: [
                    ExternalArgument {
                        name: None,
                        ffi_type: I64,
                    },
                    ExternalArgument {
                        name: None,
                        ffi_type: I64,
                    },
                ],
                output_types: [
                    ExternalArgument {
                        name: None,
                        ffi_type: I32,
                    },
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: Timeline,
                header: FuncletHeader {
                    name: FuncletId(
                        "time",
                    ),
                    args: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_in_e",
                                ),
                            ),
                            typ: Local(
                                "Event",
                            ),
                            tags: [],
                        },
                    ],
                    ret: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_out0",
                                ),
                            ),
                            typ: Local(
                                "Event",
                            ),
                            tags: [],
                        },
                    ],
                    binding: None,
                },
                commands: [
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "e",
                                    ),
                                ),
                                node: Phi {
                                    index: Filled(
                                        0,
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        TailEdge(
                            Return {
                                return_values: Filled(
                                    [
                                        Filled(
                                            NodeId(
                                                "e",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: Spatial,
                header: FuncletHeader {
                    name: FuncletId(
                        "space",
                    ),
                    args: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_in_bs",
                                ),
                            ),
                            typ: Local(
                                "BufferSpace",
                            ),
                            tags: [],
                        },
                    ],
                    ret: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_out0",
                                ),
                            ),
                            typ: Local(
                                "BufferSpace",
                            ),
                            tags: [],
                        },
                    ],
                    binding: None,
                },
                commands: [
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "bs",
                                    ),
                                ),
                                node: Phi {
                                    index: Filled(
                                        0,
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        TailEdge(
                            Return {
                                return_values: Filled(
                                    [
                                        Filled(
                                            NodeId(
                                                "bs",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: Value,
                header: FuncletHeader {
                    name: FuncletId(
                        "min",
                    ),
                    args: [],
                    ret: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_out0",
                                ),
                            ),
                            typ: Local(
                                "i64",
                            ),
                            tags: [],
                        },
                    ],
                    binding: SpecBinding(
                        FunctionClassBinding {
                            default: false,
                            function_class: FunctionClassId(
                                "min",
                            ),
                        },
                    ),
                },
                commands: [
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_f0",
                                    ),
                                ),
                                node: Constant {
                                    value: Filled(
                                        "2",
                                    ),
                                    type_id: Filled(
                                        Local(
                                            "i64",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_f1",
                                    ),
                                ),
                                node: Constant {
                                    value: Filled(
                                        "1",
                                    ),
                                    type_id: Filled(
                                        Local(
                                            "i64",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t_f2",
                                    ),
                                ),
                                node: CallFunctionClass {
                                    function_id: Filled(
                                        FunctionClassId(
                                            "_lt_i64_i64",
                                        ),
                                    ),
                                    arguments: Filled(
                                        [
                                            Filled(
                                                NodeId(
                                                    "_f0",
                                                ),
                                            ),
                                            Filled(
                                                NodeId(
                                                    "_f1",
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_f2",
                                    ),
                                ),
                                node: ExtractResult {
                                    node_id: Filled(
                                        NodeId(
                                            "_t_f2",
                                        ),
                                    ),
                                    index: Filled(
                                        0,
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_f3",
                                    ),
                                ),
                                node: Constant {
                                    value: Filled(
                                        "2",
                                    ),
                                    type_id: Filled(
                                        Local(
                                            "i64",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_f4",
                                    ),
                                ),
                                node: Constant {
                                    value: Filled(
                                        "1",
                                    ),
                                    type_id: Filled(
                                        Local(
                                            "i64",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_f5",
                                    ),
                                ),
                                node: Select {
                                    condition: Filled(
                                        NodeId(
                                            "_f2",
                                        ),
                                    ),
                                    true_case: Filled(
                                        NodeId(
                                            "_f3",
                                        ),
                                    ),
                                    false_case: Filled(
                                        NodeId(
                                            "_f4",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        TailEdge(
                            Return {
                                return_values: Filled(
                                    [
                                        Filled(
                                            NodeId(
                                                "_f5",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        FunctionClass(
            FunctionClass {
                name: FunctionClassId(
                    "min",
                ),
                input_types: [],
                output_types: [
                    Local(
                        "i64",
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: ScheduleExplicit,
                header: FuncletHeader {
                    name: FuncletId(
                        "_min_impl0",
                    ),
                    args: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_out0",
                                ),
                            ),
                            typ: Local(
                                "i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_out0",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "tmln",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    ret: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "_out0",
                                ),
                            ),
                            typ: Local(
                                "i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_out0",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "tmln",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    binding: ScheduleBinding(
                        ScheduleBinding {
                            implicit_tags: (
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ),
                            meta_map: MetaMapping {
                                value: (
                                    MetaId(
                                        "val",
                                    ),
                                    FuncletId(
                                        "min",
                                    ),
                                ),
                                timeline: (
                                    MetaId(
                                        "tmln",
                                    ),
                                    FuncletId(
                                        "time",
                                    ),
                                ),
                                spatial: (
                                    MetaId(
                                        "sptl",
                                    ),
                                    FuncletId(
                                        "space",
                                    ),
                                ),
                            },
                        },
                    ),
                },
                commands: [
                    Filled(
                        Node(
                            NamedNode {
                                name: None,
                                node: Phi {
                                    index: Filled(
                                        0,
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        TailEdge(
                            Return {
                                return_values: Filled(
                                    [
                                        Filled(
                                            NodeId(
                                                "_out0",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: ScheduleExplicit,
                header: FuncletHeader {
                    name: FuncletId(
                        "min_impl",
                    ),
                    args: [],
                    ret: [
                        FuncletArgument {
                            name: None,
                            typ: Local(
                                "i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_out0",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "tmln",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    binding: ScheduleBinding(
                        ScheduleBinding {
                            implicit_tags: (
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ),
                            meta_map: MetaMapping {
                                value: (
                                    MetaId(
                                        "val",
                                    ),
                                    FuncletId(
                                        "min",
                                    ),
                                ),
                                timeline: (
                                    MetaId(
                                        "tmln",
                                    ),
                                    FuncletId(
                                        "time",
                                    ),
                                ),
                                spatial: (
                                    MetaId(
                                        "sptl",
                                    ),
                                    FuncletId(
                                        "space",
                                    ),
                                ),
                            },
                        },
                    ),
                },
                commands: [
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t0",
                                    ),
                                ),
                                node: AllocTemporary {
                                    place: Filled(
                                        Local,
                                    ),
                                    storage_type: Filled(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    buffer_flags: Filled(
                                        BufferFlags {
                                            map_read: true,
                                            map_write: true,
                                            copy_src: false,
                                            copy_dst: false,
                                            storage: false,
                                            uniform: false,
                                        },
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: None,
                                node: LocalDoBuiltin {
                                    operation: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_f0",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    inputs: Filled(
                                        [],
                                    ),
                                    outputs: Filled(
                                        [
                                            Filled(
                                                NodeId(
                                                    "_t0",
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_f0_0",
                                    ),
                                ),
                                node: ReadRef {
                                    storage_type: Filled(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    source: Filled(
                                        NodeId(
                                            "_t0",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t1",
                                    ),
                                ),
                                node: AllocTemporary {
                                    place: Filled(
                                        Local,
                                    ),
                                    storage_type: Filled(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    buffer_flags: Filled(
                                        BufferFlags {
                                            map_read: true,
                                            map_write: true,
                                            copy_src: false,
                                            copy_dst: false,
                                            storage: false,
                                            uniform: false,
                                        },
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: None,
                                node: LocalDoBuiltin {
                                    operation: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_f1",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    inputs: Filled(
                                        [],
                                    ),
                                    outputs: Filled(
                                        [
                                            Filled(
                                                NodeId(
                                                    "_t1",
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_f1_0",
                                    ),
                                ),
                                node: ReadRef {
                                    storage_type: Filled(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    source: Filled(
                                        NodeId(
                                            "_t1",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t2",
                                    ),
                                ),
                                node: AllocTemporary {
                                    place: Filled(
                                        Local,
                                    ),
                                    storage_type: Filled(
                                        FFI(
                                            I32,
                                        ),
                                    ),
                                    buffer_flags: Filled(
                                        BufferFlags {
                                            map_read: true,
                                            map_write: true,
                                            copy_src: false,
                                            copy_dst: false,
                                            storage: false,
                                            uniform: false,
                                        },
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: None,
                                node: LocalDoExternal {
                                    operation: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_t_f2",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    external_function_id: Filled(
                                        ExternalFunctionId(
                                            "_lt_i64_i64",
                                        ),
                                    ),
                                    inputs: Filled(
                                        [
                                            Filled(
                                                NodeId(
                                                    "_f0_0",
                                                ),
                                            ),
                                            Filled(
                                                NodeId(
                                                    "_f1_0",
                                                ),
                                            ),
                                        ],
                                    ),
                                    outputs: Filled(
                                        [
                                            Filled(
                                                NodeId(
                                                    "_t2",
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_f2_0",
                                    ),
                                ),
                                node: ReadRef {
                                    storage_type: Filled(
                                        FFI(
                                            I32,
                                        ),
                                    ),
                                    source: Filled(
                                        NodeId(
                                            "_t2",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t3",
                                    ),
                                ),
                                node: DefaultJoin,
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t4",
                                    ),
                                ),
                                node: InlineJoin {
                                    funclet: Filled(
                                        FuncletId(
                                            "_min_impl2",
                                        ),
                                    ),
                                    captures: Filled(
                                        [],
                                    ),
                                    continuation: Filled(
                                        NodeId(
                                            "_t3",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        TailEdge(
                            ScheduleSelect {
                                operations: Filled(
                                    [
                                        Filled(
                                            RemoteNodeId {
                                                funclet: Filled(
                                                    MetaId(
                                                        "val",
                                                    ),
                                                ),
                                                node: Some(
                                                    Filled(
                                                        NodeId(
                                                            "_f5",
                                                        ),
                                                    ),
                                                ),
                                            },
                                        ),
                                        Filled(
                                            RemoteNodeId {
                                                funclet: Filled(
                                                    MetaId(
                                                        "sptl",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                        Filled(
                                            RemoteNodeId {
                                                funclet: Filled(
                                                    MetaId(
                                                        "tmln",
                                                    ),
                                                ),
                                                node: None,
                                            },
                                        ),
                                    ],
                                ),
                                condition: Filled(
                                    NodeId(
                                        "_f2_0",
                                    ),
                                ),
                                callee_funclet_ids: Filled(
                                    [
                                        Filled(
                                            FuncletId(
                                                "_min_impl3",
                                            ),
                                        ),
                                        Filled(
                                            FuncletId(
                                                "_min_impl4",
                                            ),
                                        ),
                                    ],
                                ),
                                callee_arguments: Filled(
                                    [],
                                ),
                                continuation_join: Filled(
                                    NodeId(
                                        "_t4",
                                    ),
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: ScheduleExplicit,
                header: FuncletHeader {
                    name: FuncletId(
                        "_min_impl2",
                    ),
                    args: [
                        FuncletArgument {
                            name: Some(
                                NodeId(
                                    "r_0",
                                ),
                            ),
                            typ: Local(
                                "i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_f5",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "tmln",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    ret: [
                        FuncletArgument {
                            name: None,
                            typ: Local(
                                "i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_out0",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "tmln",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    binding: ScheduleBinding(
                        ScheduleBinding {
                            implicit_tags: (
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ),
                            meta_map: MetaMapping {
                                value: (
                                    MetaId(
                                        "val",
                                    ),
                                    FuncletId(
                                        "min",
                                    ),
                                ),
                                timeline: (
                                    MetaId(
                                        "tmln",
                                    ),
                                    FuncletId(
                                        "time",
                                    ),
                                ),
                                spatial: (
                                    MetaId(
                                        "sptl",
                                    ),
                                    FuncletId(
                                        "space",
                                    ),
                                ),
                            },
                        },
                    ),
                },
                commands: [
                    Filled(
                        Node(
                            NamedNode {
                                name: None,
                                node: Phi {
                                    index: Filled(
                                        0,
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t0",
                                    ),
                                ),
                                node: DefaultJoin,
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t1",
                                    ),
                                ),
                                node: InlineJoin {
                                    funclet: Filled(
                                        FuncletId(
                                            "_min_impl0",
                                        ),
                                    ),
                                    captures: Filled(
                                        [],
                                    ),
                                    continuation: Filled(
                                        NodeId(
                                            "_t0",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        TailEdge(
                            Jump {
                                join: Filled(
                                    NodeId(
                                        "_t1",
                                    ),
                                ),
                                arguments: Filled(
                                    [
                                        Filled(
                                            NodeId(
                                                "r_0",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: ScheduleExplicit,
                header: FuncletHeader {
                    name: FuncletId(
                        "_min_impl3",
                    ),
                    args: [],
                    ret: [
                        FuncletArgument {
                            name: None,
                            typ: Local(
                                "i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_f3",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "tmln",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    binding: ScheduleBinding(
                        ScheduleBinding {
                            implicit_tags: (
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ),
                            meta_map: MetaMapping {
                                value: (
                                    MetaId(
                                        "val",
                                    ),
                                    FuncletId(
                                        "min",
                                    ),
                                ),
                                timeline: (
                                    MetaId(
                                        "tmln",
                                    ),
                                    FuncletId(
                                        "time",
                                    ),
                                ),
                                spatial: (
                                    MetaId(
                                        "sptl",
                                    ),
                                    FuncletId(
                                        "space",
                                    ),
                                ),
                            },
                        },
                    ),
                },
                commands: [
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t0",
                                    ),
                                ),
                                node: AllocTemporary {
                                    place: Filled(
                                        Local,
                                    ),
                                    storage_type: Filled(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    buffer_flags: Filled(
                                        BufferFlags {
                                            map_read: true,
                                            map_write: true,
                                            copy_src: false,
                                            copy_dst: false,
                                            storage: false,
                                            uniform: false,
                                        },
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: None,
                                node: LocalDoBuiltin {
                                    operation: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_f3",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    inputs: Filled(
                                        [],
                                    ),
                                    outputs: Filled(
                                        [
                                            Filled(
                                                NodeId(
                                                    "_t0",
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_f3_0",
                                    ),
                                ),
                                node: ReadRef {
                                    storage_type: Filled(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    source: Filled(
                                        NodeId(
                                            "_t0",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        TailEdge(
                            Return {
                                return_values: Filled(
                                    [
                                        Filled(
                                            NodeId(
                                                "_f3_0",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Funclet(
            Funclet {
                kind: ScheduleExplicit,
                header: FuncletHeader {
                    name: FuncletId(
                        "_min_impl4",
                    ),
                    args: [],
                    ret: [
                        FuncletArgument {
                            name: None,
                            typ: Local(
                                "i64",
                            ),
                            tags: [
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_f4",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "tmln",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ],
                        },
                    ],
                    binding: ScheduleBinding(
                        ScheduleBinding {
                            implicit_tags: (
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                                Tag {
                                    quot: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "sptl",
                                                ),
                                            ),
                                            node: None,
                                        },
                                    ),
                                    flow: Usable,
                                },
                            ),
                            meta_map: MetaMapping {
                                value: (
                                    MetaId(
                                        "val",
                                    ),
                                    FuncletId(
                                        "min",
                                    ),
                                ),
                                timeline: (
                                    MetaId(
                                        "tmln",
                                    ),
                                    FuncletId(
                                        "time",
                                    ),
                                ),
                                spatial: (
                                    MetaId(
                                        "sptl",
                                    ),
                                    FuncletId(
                                        "space",
                                    ),
                                ),
                            },
                        },
                    ),
                },
                commands: [
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_t0",
                                    ),
                                ),
                                node: AllocTemporary {
                                    place: Filled(
                                        Local,
                                    ),
                                    storage_type: Filled(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    buffer_flags: Filled(
                                        BufferFlags {
                                            map_read: true,
                                            map_write: true,
                                            copy_src: false,
                                            copy_dst: false,
                                            storage: false,
                                            uniform: false,
                                        },
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: None,
                                node: LocalDoBuiltin {
                                    operation: Filled(
                                        RemoteNodeId {
                                            funclet: Filled(
                                                MetaId(
                                                    "val",
                                                ),
                                            ),
                                            node: Some(
                                                Filled(
                                                    NodeId(
                                                        "_f4",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    inputs: Filled(
                                        [],
                                    ),
                                    outputs: Filled(
                                        [
                                            Filled(
                                                NodeId(
                                                    "_t0",
                                                ),
                                            ),
                                        ],
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        Node(
                            NamedNode {
                                name: Some(
                                    NodeId(
                                        "_f4_0",
                                    ),
                                ),
                                node: ReadRef {
                                    storage_type: Filled(
                                        FFI(
                                            I64,
                                        ),
                                    ),
                                    source: Filled(
                                        NodeId(
                                            "_t0",
                                        ),
                                    ),
                                },
                            },
                        ),
                    ),
                    Filled(
                        TailEdge(
                            Return {
                                return_values: Filled(
                                    [
                                        Filled(
                                            NodeId(
                                                "_f4_0",
                                            ),
                                        ),
                                    ],
                                ),
                            },
                        ),
                    ),
                ],
            },
        ),
        Pipeline(
            Pipeline {
                name: "main",
                funclet: FuncletId(
                    "min_impl",
                ),
                effect: None,
            },
        ),
    ],
}
