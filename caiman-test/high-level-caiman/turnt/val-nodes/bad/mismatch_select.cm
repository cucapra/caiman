#version 0.1.0	

tmln time(e: Event) -> Event { returns e }	
sptl space(bs: BufferSpace) -> BufferSpace { returns bs }	


val main() -> i64 {	
    c :- false	
    b :- false	
    a :- true	
    // If we used `2` twice, the spec would expect two different two's	
    // whereas our implementation only uses one	
    two :- 2	
    three :- 3	
    left :- (1 if a else two) if b else two	
    right :- three if c else (three if b else 4)	
    returns left if (a if b else c) else right	
}	

fn foo() -> i64 impls main, time, space	
{	
    let b = false;	
    var d = false;	
    if b {	
        d = true;	
    }	

    var v;	
    if d {	
        v = 2;	
        if false {	
            if false {	
                v = 1;	
            }	
        }	
    } else {	
        if false {	
            v = 3;	
        } else {	
            v = 4;	
            if false {	
                v = 3;	
            }	
        }	
    }	
    v	
}	

pipeline main { foo }	