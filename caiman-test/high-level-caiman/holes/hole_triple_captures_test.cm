val bar(a: i64, t: i64) -> i64 {
    b :- foo(a)
    p :- foo(t)
    s :- foo(b)
    returns s + t
}

tmln time(e: Event) -> Event { returns e }
sptl space(s: BufferSpace) -> BufferSpace { returns s }

fn main(a: i64, t: &i64) -> i64 impls bar, time, space {
    var k = *t;
    let b = foo_impl(a);
    let p = foo_impl(k);
    let s = foo_impl(b);
    ? + ?
}

val foo(a: i64) -> i64 {
    returns a + 10
}

fn foo_impl(a: i64) -> i64 impls foo, time, space {
    let x = 10;
    ? + ?
}

pipeline main { main }