use crate::scheduling_language::ast::*;
use crate::scheduling_language::ast_factory::ASTFactory;
use super::schedulable::{SubExpr, FullExpr};

grammar(astf: &ASTFactory);

match {
  r"[a-zA-Z][a-zA-Z0-9_]*", // Id

  ";", ".",
  "IfGuard", "IfTrue", "IfFalse",
  "IfComplete", "Var", "Prim",

  r"\s*" => { }, // Whitespace
  r"//[^\n\r]*[\n\r]*" => { }, // Double-slash comments
}

pub Program: ParsedProgram = { Stmt* => <> }

pub Stmt: ParsedStmt = {
  <@L> <Id> <("." <SubExpr>)*> "." <FullExpr> ";" <@R> => astf.expr(<>),
}

SubExpr: SubExpr = {
  "IfGuard" => SubExpr::IfGuard,
  "IfTrue" => SubExpr::IfTrue,
  "IfFalse" => SubExpr::IfFalse,
}

FullExpr: FullExpr = {
  "IfComplete" => FullExpr::IfComplete,
  "Prim" => FullExpr::Primitive,
}


Id: String = { r"[a-zA-Z][a-zA-Z0-9_]*" => String::from(<>) }
