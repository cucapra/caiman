#version 0.1.0

tmln time(e: Event) -> Event { returns e }
sptl space(s: BufferSpace) -> BufferSpace { returns s }

val rec_sum(a: i64) -> i64 {
    returns 0 if a <= 0 else rec_sum(a - 1) + a
}

fn rec_sum_impl(a: i64) -> i64 impls rec_sum, time, space {
    if a <= 0 {
        @in {a: node(val) };
        0
    } else {
        @in {a: node(val) };
        let r = rec_sum_impl(a - 1);
        @in {a: node(val) };
        r + a
    }
}

pipeline main { rec_sum_impl }