version 0.0.2

ffi i64;
event %event0;
buffer_space %buffspace;
native_value %i64 : i64;
ref %i64l : i64-local<flags=[]>;

function @lt(%i64, %i64) -> %i64;
function @main() -> %i64;


external-cpu-pure[impl @lt] %lt(i64, i64) -> i64;

value[impl default @main] %main() -> [%out: %i64] {
    %a = constant %i64 2;
    %b = constant %i64 1;
    %r_t = call @lt(%a, %b);
    %r = extract %r_t 0;
    
    %s = select %r %a %b;
    return %s;
}

timeline %time(%e : %event0) -> %event0 {
    return %e;
}

spatial %space(%bs : %buffspace) -> %buffspace {
    return %bs;
}


schedule[value $val = %main, timeline $time = %time, spatial $space = %space]
%main_head<$time-usable, $time-usable>() ->
$val.%out-usable $space-usable $time-usable %i64
{
    %ref = alloc-temporary local [] i64;

    local-do-builtin $val.%a() -> %ref;
    %a = read-ref i64 %ref;
    local-do-builtin $val.%b() -> %ref;
    %b = read-ref i64 %ref;

    local-do-external %lt $val.%r_t(%a, %b) -> %ref;
    %r = read-ref i64 %ref;

    %default = default-join;
    %join = inline-join %main_ret [] %default;

    schedule-select %r [%main_left, %main_right]
        [$val.%s, $time, $space]
        (%a, %b) %join;
}

schedule[value $val = %main, timeline $time = %time, spatial $space = %space]
%main_left<$time-usable, $time-usable>
(
    %a : $val.%a-usable $space-usable $time-usable %i64,
    %b : $val.%b-usable $space-usable $time-usable %i64
) ->
$val.%a-usable $space-usable $time-usable %i64
{
    return %a;
}

schedule[value $val = %main, timeline $time = %time, spatial $space = %space]
%main_right<$time-usable, $time-usable>
(
    %a : $val.%a-usable $space-usable $time-usable %i64,
    %b : $val.%b-usable $space-usable $time-usable %i64
) ->
$val.%b-usable $space-usable $time-usable %i64
{
    return %b;
}



schedule[value $val = %main, timeline $time = %time, spatial $space = %space]
%main_ret<$time-usable, $time-usable>
(%s : $val.%s-usable $space-usable $time-usable %i64) ->
$val.%out-usable $space-usable $time-usable %i64
{
    return %s;
}

pipeline "main" = %main_head;