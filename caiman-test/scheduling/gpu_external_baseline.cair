version 0.0.1

types [
    i64,
    slot $slot0 {
        type : i64,
        stage : ready,
        place : local,
    },
    slot $slot_gpu {
        type : i64,
        stage : ready,
        place : gpu,
    },
    event $event0 {
        place : local
    },
]

external_gpu @trivial(%x : i64) -> [%out : i64] : "src/gpu_external.wgsl"
{
    resource {
        group : 0,
        binding : 0,
        input : %x,
    },
    resource {
        group : 0,
        binding : 1,
        output : %out,
    }
}

value @foo(%0 : i64) -> i64 {
    %x = constant 3i64;
    %ty = call @trivial(%x);
    %y = extract %ty 0;
    return %y;
}

schedule @foo_main(%blob : $slot0, %gpu_blob : $slot_gpu) -> $slot0 {
    %0 = alloc-local-i64 %blob @foo.%x;
    %t0 = encode-do-local @foo.%x() -> %0;

    %1 = alloc-gpu-i64 %y @foo.%gpu_blob;
    %t1 = encode-do-gpu @foo.%ty(%0) -> %1;
    return %1;
}

timeline @time(%e : $event0) -> $event0 {
    return %e;
}

extras {
    @foo_main {
        value : @foo,
        input_slots : {
            %blob : slot_info()
        },
        output_slots : {
            %blob : slot_info()
        },
        input_fences : {},
        output_fences : {},
        input_buffers : {},
        output_buffers : {},
        in_timeline_tag : timeline_tag input @time.%e,
        out_timeline_tag : timeline_tag input @time.%e,
    },
}

pipeline "main" = @foo_main;