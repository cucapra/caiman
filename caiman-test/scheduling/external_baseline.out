(
    version: (0, 0, 1),
    program: (
        native_interface: (
            types: {
                0: I64,
            },
            external_cpu_functions: {
                0: (
                    name: "op",
                    input_types: [
                        (0),
                    ],
                    output_types: [
                        (0),
                    ],
                ),
            },
            external_gpu_functions: {},
        ),
        types: {
            0: NativeValue(
                storage_type: (0),
            ),
            1: Slot(
                storage_type: (0),
                queue_stage: Ready,
                queue_place: Local,
            ),
            2: Event(
                place: Local,
            ),
        },
        funclets: {
            0: (
                kind: Value,
                input_types: [
                    0,
                ],
                output_types: [
                    0,
                ],
                nodes: [
                    Phi(
                        index: 0,
                    ),// [0]
                    ConstantInteger(
                        value: 2,
                        type_id: 0,
                    ),// [1]
                    CallExternalCpu(
                        external_function_id: 0,
                        arguments: [
                            1,
                        ],
                    ),// [2]
                    ExtractResult(
                        node_id: 2,
                        index: 0,
                    ),
                ],
                tail_edge: Return(
                    return_values: [
                        3,
                    ],
                ),
            ),
            1: (
                kind: ScheduleExplicit,
                input_types: [
                    1,
                ],
                output_types: [
                    1,
                ],
                nodes: [
                    Phi(
                        index: 0,
                    ),// [0]
                    AllocTemporary(
                        place: Local,
                        storage_type: (0),
                        operation: (
                            funclet_id: 0,
                            node_id: 1,
                        ),
                    ),// [1]
                    EncodeDo(
                        place: Local,
                        operation: (
                            funclet_id: 0,
                            node_id: 1,
                        ),
                        inputs: [],
                        outputs: [
                            1,
                        ],
                    ),// [2]
                    AllocTemporary(
                        place: Local,
                        storage_type: (0),
                        operation: (
                            funclet_id: 0,
                            node_id: 3,
                        ),
                    ),// [3]
                    EncodeDo(
                        place: Local,
                        operation: (
                            funclet_id: 0,
                            node_id: 2,
                        ),
                        inputs: [
                            1,
                        ],
                        outputs: [
                            3,
                        ],
                    ),
                ],
                tail_edge: Return(
                    return_values: [
                        3,
                    ],
                ),
            ),
            2: (
                kind: Timeline,
                input_types: [
                    2,
                ],
                output_types: [
                    2,
                ],
                nodes: [
                    Phi(
                        index: 0,
                    ),
                ],
                tail_edge: Return(
                    return_values: [
                        0,
                    ],
                ),
            ),
        },
        value_functions: {},
        pipelines: [
            (
                name: "main",
                entry_funclet: 1,
                yield_points: {},
            ),
        ],
        value_funclet_extras: [],
        scheduling_funclet_extras: [
            (1, (
                value_funclet_id: 0,
                input_states: [
                    (0, (
                        value_tag: None,
                        timeline_tag: None,
                        spatial_tag: None,
                    )),
                ],
                output_states: [
                    (0, (
                        value_tag: None,
                        timeline_tag: None,
                        spatial_tag: None,
                    )),
                ],
                input_fences: [],
                output_fences: [],
                input_buffers: [],
                output_buffers: [],
                in_timeline_tag: Input(
                    funclet_id: 2,
                    index: 0,
                ),
                out_timeline_tag: Input(
                    funclet_id: 2,
                    index: 0,
                ),
            )),
        ],
    ),
)