#version 0.1.0

tmln time(e: Event) -> Event { returns e }
sptl space(bs: BufferSpace) -> BufferSpace { returns bs }

val main() -> i32 {
    a :- 2
    c :- 10
    b :- a * c
    d :- b + a
    e :- d - c
    t :- 3
    k :- e / t
    returns k
}

fn main_impl() -> i32 @ node(val.k)-usable
    impls main, time, space
{
    let a @ node(val.a) = 2;
    let c @ node(val.c) = 10;
    let b @ node(val.b) = a * c;
    let d @ node(val.d) = b + a;
    let e @ node(val.e) = d - c;
    let t @ node(val.t) = 3;
    let k @ node(val.k) = e / t;
    k
    
}

pipeline main { main_impl }